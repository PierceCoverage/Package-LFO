-- This file was generated using Luraph Obfuscator v13.5.4

return(function(RZ,jZ,LZ,GZ,PZ,EZ,uZ,ZZ,KZ,oZ,AZ,zZ,QZ,iZ,VZ,UZ,vZ,tZ,CZ,BZ,bZ,wZ,XZ,nZ,IZ,NZ,WZ,MZ,OZ,YZ,xZ,mZ,DZ,hZ,cZ,pZ,fZ,eZ,rZ,gZ,qZ,lZ,...)local i,Y,s,X=nil,nil,nil,(nil);local d,Jv=tostring,(1);local a,F=select,jZ;local y,m=tonumber,OZ;repeat if Jv<=0x0001 then if Jv==0 then s=DZ;Jv=0x00003;else i=1;Jv=2;end;else if Jv==0X0002 then Y=2^0X034;Jv=0X0;else X=0X080000000;Jv=4;end;end;until Jv>0x3;do Jv=0;end;local P,j,S=nil,nil,(nil);while Jv<=2 do if Jv<=0 then P=qZ;Jv=1;else do if Jv==1 then do j=mZ;end;Jv=2;else do S=WZ;end;Jv=3;end;end;end;end;do Jv=0X00002;end;local C,T,O,q=nil,nil,nil,nil;while Jv<0X00004 do if not(Jv<=0x1)then if Jv==2 then C=coroutine.wrap;do Jv=3;end;else T=gZ.byte;Jv=1;end;elseif Jv~=0X00000 then do O=tZ;end;Jv=0x00;else q=CZ;Jv=4;end;end;local t,u=next,(coroutine.yield);local W=(rawget);do Jv=1;end;local B,U=nil,nil;while''do if Jv~=0X0 then B=nZ;Jv=0X0000;else do U=(B and B()or uZ);end;break;end;end;Jv=0X00001;local h=(nil);while 0.9063363245620711 do if Jv~=0X0 then Jv=0X0;else h=cZ;do break;end;end;end;local K=X-1;Jv=0x0;local o,v=nil,nil;repeat if Jv==0 then do o={[0]={[0X0]=0X0,0X1,0x0002,PZ,4,5,6,7,8,0X09,10,11,0X0C,13,0xE,15},{[0X00]=0x01,0X0,0X3,0X2,5,4,7,0X6,9,0X8,BZ,10,UZ,0X000C,0XF,0XE},{[iZ]=0X00002,PZ,0X0,1,6,0X007,hZ,vZ,IZ,0X000B,0X8,9,14,15,12,UZ},{[0X0]=0X3,0X2,0x0001,0X0,0X007,6,vZ,4,11,10,0X9,8,15,0xe,0Xd,0X0C},{[0X0]=0X4,0X005,6,7,0,0X001,2,0x3,12,13,14,0Xf,8,9,0xa,0Xb},{[0]=5,4,0X007,0X6,1,0,3,0x0002,0Xd,0xc,15,0xe,9,xZ,BZ,0x0000a},{[0X0]=0X6,0X7,0X00004,0X5,0x00002,0X3,0X0,0X001,0X000e,15,0XC,0X0000D,10,0xB,0x8,0X9},{[0]=7,6,5,4,3,0X2,1,0,0XF,14,0X0000d,0X0c,11,10,9,0x0008},{[0x0]=8,0X0009,10,0xb,12,0Xd,0Xe,15,iZ,1,2,3,4,0x005,0x06,7},{[0X0]=XZ,8,11,0X00a,13,0X00c,15,14,0X1,0,3,VZ,5,0X004,7,6},{[0]=10,11,8,9,0x00e,15,0XC,UZ,0X2,3,iZ,0X00001,6,0X7,4,5},{[0X0]=BZ,10,0X9,0X0008,0Xf,14,0xD,12,PZ,0X2,0X1,0X000,7,0x00006,5,4},{[0]=YZ,13,0X0e,15,xZ,9,10,11,0X4,0X0005,0x6,0x00007,0,1,0x2,3},{[0]=0X0000D,0Xc,15,0xE,XZ,0X8,0X00B,0x000A,0x5,0X0004,7,0X06,0x001,0X00000,0X3,0X2},{[0]=0X0e,0Xf,12,13,0xA,11,xZ,XZ,0x00006,0X7,0X00004,5,0X0002,3,0,1},{[0x00000]=0Xf,14,13,0Xc,0X0000B,IZ,0X9,0X00008,ZZ,6,5,0X0004,0X3,0X00002,0X0001,0X0}};end;Jv=0x01;else Jv=0X2;end;until Jv>1;do Jv=0X3;end;local I,D,kZ=nil,nil,(nil);while Jv~=0X004 do if Jv<=0X1 then if Jv==0 then kZ={};Jv=0X04;else I=function()local Vk=(T(h,i,i));local Uk=0X1;while(true)do if Uk~=0X0 then i=i+1;Uk=0;else return Vk;end;end;end;Jv=0X0002;end;elseif Jv~=2 then do h=O(s(h,5),KZ,function(sb)do if T(sb,0X2)~=zZ then local Sf=(S(y(sb,fZ)));if not(v)then do return Sf;end;else local B4=nil;for X_=0X0,0X0001 do if X_==0 then B4=j(Sf,v);else v=MZ;end;end;do return B4;end;end;else v=y(s(sb,1,0x001));return'';end;end;end);end;Jv=0X00001;else D=string.match;do Jv=0X0000;end;end;end;Jv=2;local x,HZ,V=nil,nil,(nil);while Jv~=3 do if not(Jv<=0X0)then if Jv==0X1 then V=0x0000100000000;Jv=3;else do x=function()local uz,mz,Vz,Sz,Gz=0X2,nil,nil,nil,(nil);do while true do if uz<=0x00000 then return Gz*16777216+Sz*65536+Vz*0X100+mz;else if uz~=0X001 then mz,Vz,Sz,Gz=T(h,i,i+0X3);uz=0X0001;else i=i+0x0004;do uz=0;end;end;end;end;end;end;end;do Jv=0;end;end;else HZ={};do Jv=1;end;end;end;local Z=(V-0X1);local M=function()local g6,l6=x(),x();if l6>=X then l6=l6-V;end;do return l6*V+g6;end;end;local z=({[0]=1});do local BQ=(1);local hQ=(nil);do repeat if BQ~=0 then hQ=VZ;BQ=0;else for kA=1,0X1f do for Ea=0,0X1 do if Ea==0X0 then z[kA]=hQ;else hQ=hQ*0X2;end;end;end;do BQ=2;end;end;until BQ>0x1;end;end;local J=assert;do Jv=0X3;end;local L,f,p,c=nil,nil,nil,nil;while Jv<4 do do if not(Jv<=0X1)then if Jv~=0X2 then do L={1,0x07,0x6};end;Jv=0X0;else do p=function()local fl,pl,el,il,Ll=0,nil,nil,nil,nil;while(true)do if fl<=1 then if fl~=0 then Ll=pZ;break;else pl=x();fl=0X3;end;else if not(fl<=0X0002)then if fl==3 then el=x();fl=2;else il=(-0X1)^f(el,0X1F,0X01);fl=0X1;end;else if not(pl==0X0000 and el==0)then else return 0;end;fl=0X04;end;end;end;local Rl=f(el,20,0xb);local jl=(f(el,iZ,oZ)*V+pl);do fl=0X1;end;do while(true)do do if fl~=0 then do if Rl==0X0 then if jl==0x0 then return il*0X0;else Rl=1;Ll=0;end;elseif Rl~=0X7ff then else if jl~=0 then do return il*(0X1/0x0);end;else return il*(0X00000/0X0000);end;end;end;do fl=0;end;else do return il*(0X002^(Rl-0X3FF))*(jl/Y+Ll);end;end;end;end;end;end;end;Jv=0x1;end;else if Jv~=0 then c=GZ or RZ;Jv=0X4;else do f=function(wU,hU,gU)local uU=(nil);do for Tv=0X00,2 do if Tv<=0x00000 then uU=(wU/z[hU])%z[gU];else do if Tv==0X1 then uU=uU-uU%0X1;else do return uU;end;end;end;end;end;end;end;end;do Jv=2;end;end;end;end;end;local G=((bit or bit32));local R,g=G and G[NZ]or function(hR,mR)hR=hR%V;local gR=(1);local fR=(nil);do for Bz=0,3 do do if not(Bz<=1)then if Bz~=0x2 then do return fR+hR*gR+mR*gR;end;else while hR>0x0 and mR>0 do local BE,PE,yE=3,nil,(nil);while 0.5939333361720268 do do if not(BE<=0x01)then if BE<=0X002 then do mR=(mR-yE)/16;end;break;else do if BE~=0X3 then hR=(hR-PE)/16;do BE=2;end;else do PE=hR%16;end;BE=0;end;end;end;else if BE==0x0 then yE=mR%16;BE=1;else fR=fR+o[PE][yE]*gR;do BE=4;end;end;end;end;end;gR=gR*16;end;end;else if Bz==0 then mR=mR%V;else fR=0;end;end;end;end;end;end,EZ;local N=G and G[QZ]or function(f2,C2)do for m6=0X0000,0x1 do if m6==0 then f2=f2%V;else C2=C2%V;end;end;end;return((f2+C2)-R(f2,C2))/2;end;local E=G and G[wZ]or function(SF,zF)do SF=SF%V;end;zF=zF%V;return Z-N(Z-SF,Z-zF);end;local Q=G and G[AZ]or function(k1)return Z-(k1%V);end;Jv=0x0000;local w,A,k,b,e=nil,nil,nil,nil,nil;while Jv<7 do do if not(Jv<=2)then if Jv<=0X4 then if Jv==0X0003 then do A=A or function(wA,BA)local UA=(nil);local QA=(0X3);while(true)do if QA<=0X1 then if QA~=0 then if BA<0X0000 then return w(wA,-BA);end;QA=0X002;else return UA-UA%1;end;else if QA~=0x2 then do if BA>=0X00020 then do return 0;end;end;end;QA=1;else UA=(wA%V/z[BA]);QA=0;end;end;end;end;end;Jv=0x002;else k=bZ;Jv=3;end;elseif Jv==0X5 then do w=w or function(EJ,IJ)local rJ=0X1;repeat if rJ==0x0 then do if not(IJ<0x0)then else do return A(EJ,-IJ);end;end;end;rJ=0X02;else if not(IJ>=0X20)then else return 0x0;end;rJ=0x0;end;until rJ>1;return(EJ*z[IJ])%V;end;end;Jv=0x004;else A=G and G.rshift;Jv=5;end;else do if Jv<=0X0 then w=G and G[LZ];do Jv=0x00006;end;elseif Jv~=1 then b={[4]=1,[6]=0X00002,[0]=1,[3]=4,[0X0007]=0x3,[0]=9,[0X0000]=1,[1]=0X00005,[2]=0X8,[4]=PZ};Jv=1;else e=function()local jH,xH=0,0;while true do local oF=T(h,i,i);i=i+1;xH=E(xH,w(N(oF,127),jH));do if N(oF,0X000080)==0 then do return xH;end;end;end;jH=jH+0X07;end;end;do Jv=0x7;end;end;end;end;end;end;local l=I();local r=function()local kc=(2);local bc=nil;repeat do if kc<=0X00 then if not(bc>K)then else return bc-V;end;do kc=0X001;end;else if kc~=0X1 then bc=e();kc=0x0;else return bc;end;end;end;until(false);end;local JZ=(I());local aZ=(function(Rn)local xn=({T(h,i,i+3)});local Bn=(R(xn[1],JZ));local mn=(0X0000);local Xn,On,Nn=nil,nil,nil;repeat if not(mn<=0X1)then if mn~=2 then Nn=R(xn[0X4],JZ);mn=0x1;else On=R(xn[3],JZ);mn=3;end;elseif mn==0 then do Xn=R(xn[0X2],JZ);end;mn=0X00002;else JZ=(0X4D*JZ+Rn)%256;do mn=0X00004;end;end;until mn>3;i=i+0x00004;return Nn*16777216+On*0X10000+Xn*0X100+Bn;end);local FZ=function(...)return a('\035',...),{...};end;local H,dZ,yZ=type,nil,nil;for ws=0,2 do if not(ws<=0x0)then if ws==0x1 then yZ=function(Gv)local hv,Uv,Kv=0,nil,nil;repeat do if hv~=0 then do Kv='';end;break;else Uv=x();hv=1;end;end;until(false);hv=2;repeat if not(hv<=0)then do if hv~=1 then do for en=0x1,Uv,0X1F3D do local fn,Mn=en+0X1F3d-pZ,(nil);for OX=0X0,2 do if not(OX<=0)then do if OX~=1 then do for dP=1,#Mn do for dq=0,1 do if dq==0x00 then(Mn)[dP]=R(Mn[dP],l);else l=(Gv*l+eZ)%0X00100;end;end;end;end;else Mn={T(h,i+en-pZ,i+fn-0X00001)};end;end;else do if not(fn>Uv)then else fn=Uv;end;end;end;end;do Kv=Kv..S(c(Mn));end;end;end;hv=0X0001;else do i=i+Uv;end;do hv=0X00;end;end;end;else return Kv;end;until false;end;else end;else do dZ=1;end;end;end;local sZ,TZ,SZ=nil,nil,nil;for NF=0,0X2 do if NF<=0x000 then function sZ(Fp,Gp,Qp)local Kp,gp=Fp[4],(Fp[7]);local Lp=(Fp[0X1]);local vp=Fp[3];local Hp,zp=Fp[0X9],Fp[0X6];local Ip=(Fp[2]);local Cp=(m({},{__mode="v"}));local Up,jp=Fp[0X5],nil;jp=function(...)local DK=0X0;local UK=(1);local iK=((B and B()or _ENV));local sK,GK=(iK==U and Qp or iK),{};local FK,QK=FZ(...);FK=FK-0X1;for eK=0X00,FK do if not(Ip>eK)then do break;end;else GK[eK]=QK[eK+0X01];end;end;(kZ)[0x2]=Fp;kZ[0X00003]=GK;if not zp then QK=nil;else if Lp then do(GK)[Ip]={n=FK>=Ip and FK-Ip+1 or 0,c(QK,Ip+1,FK+1)};end;end;end;do if sK~=iK then if P then(P)(jp,sK);else _ENV=sK;end;end;end;local oK,JK,wK,KK=F(function()repeat local N1=Kp[UK];local p1=(N1[0X004]);UK=UK+0X1;if p1<46 then if p1<23 then if not(p1>=11)then if not(p1>=5)then do if p1>=2 then do if p1<0X3 then local Ld=N1[0X7];(GK[Ld])(c(GK,Ld+0x0001,DK));DK=Ld-1;else if p1==4 then local fN=GK[N1[0X6]]/GK[N1[0x1]];do(GK)[N1[7]]=fN-fN%0X0001;end;else do repeat local Im,Vm=Cp,GK;if#Im>0x00 then local fF=({});for e0,l0 in t,Im do do for RI,ZI in t,l0 do if not(ZI[1]==Vm and ZI[2]>=0)then else local ST=ZI[0X0002];if not(not fF[ST])then else fF[ST]={Vm[ST]};end;do ZI[1]=fF[ST];end;(ZI)[2]=1;end;end;end;end;end;until true;end;return;end;end;end;else if p1==1 then local IM=N1[7];local UM,cM,EM=GK[IM],GK[IM+0x001],GK[IM+2];GK[IM]=C(function()for Nz=UM,cM,EM do(u)(true,Nz);end;end);UK=N1[6];else local Qo,ho=N1[0X7],(N1[0X06]);if ho==0 then else DK=Qo+ho-1;end;local Vo,so=nil,(nil);local eo=(N1[1]);if ho==0X1 then Vo,so=FZ(GK[Qo]());else Vo,so=FZ(GK[Qo](c(GK,Qo+0x1,DK)));end;if eo==1 then DK=Qo-1;else do if eo==0X0 then Vo=Vo+Qo-1;DK=Vo;else Vo=Qo+eo-0X2;DK=Vo+0X1;end;end;local ml=(0X0);for O9=Qo,Vo do ml=ml+0X01;(GK)[O9]=so[ml];end;end;end;end;end;else do if not(p1<0x8)then if p1>=0X00009 then if p1~=0XA then repeat local Cg,fg,Lg=Cp,GK,(N1[7]);if not(#Cg>0)then else local cm={};for Ir,kr in t,Cg do for dV,BV in t,kr do if not(BV[1]==fg and BV[0X2]>=Lg)then else local Oi=BV[0x2];if not cm[Oi]then cm[Oi]={fg[Oi]};end;(BV)[1]=cm[Oi];BV[0X2]=0X01;end;end;end;end;until true;else GK[N1[7]]=sK[N1[2]];end;else GK[N1[7]]=GK[N1[6]]<GK[N1[0X001]];end;else do if p1>=6 then do if p1==0x7 then if not(not GK[N1[7]])then else UK=N1[0x6];end;else local du,Ou=N1[7],(GK[N1[0X6]]);(GK)[du+1]=Ou;do(GK)[du]=Ou[N1[0X05]];end;end;end;else if GK[N1[0X00006]]<GK[N1[1]]then UK=N1[7];end;end;end;end;end;end;elseif p1<0X00011 then if p1>=0X0e then if p1>=15 then if p1~=0X10 then do if N1[0X001]~=184 then repeat local dx,Kx=Cp,GK;if#dx>0 then local PJ={};for B2,w2 in t,dx do for Oy,my in t,w2 do if my[1]==Kx and my[2]>=0X0 then local ST=(my[0X2]);if not(not PJ[ST])then else(PJ)[ST]={Kx[ST]};end;(my)[1]=PJ[ST];do(my)[2]=0X00001;end;end;end;end;end;until true;local jR=(N1[7]);do return false,jR,jR;end;else UK=UK-0x1;(Kp)[UK]={[0x7]=(N1[0X007]-0X025),[0x6]=(N1[0X6]-37),[4]=0x00036};end;end;else local Qi=N1[7];local ji,xi,yi=GK[Qi]();do if not(ji)then else(GK)[Qi+0X0001]=xi;(GK)[Qi+2]=yi;do UK=N1[0x6];end;end;end;end;else if not(GK[N1[6]]<=GK[N1[0X1]])then do UK=N1[7];end;end;end;else if not(p1<12)then do if p1==13 then DK=N1[0X7];(GK)[DK]=GK[DK]();else local ct=N1[6];local ft=(GK[ct]);for lT=ct+0X001,N1[1]do do ft=ft..GK[lT];end;end;(GK)[N1[7]]=ft;end;end;else if not(not(GK[N1[0X06]]<GK[N1[0X1]]))then else UK=N1[0X07];end;end;end;else if p1>=0X14 then if p1>=0x015 then do if p1~=0x16 then if GK[N1[0X6]]==N1[5]then UK=N1[0X7];end;else if GK[N1[0X0006]]~=GK[N1[0x00001]]then else do UK=N1[0x7];end;end;end;end;else repeat local vv,Zv=Cp,(GK);if#vv>0x0 then local cR=({});for RA,XA in t,vv do for lC,PC in t,XA do do if not(PC[0x1]==Zv and PC[0X002]>=0X0000)then else local ou=PC[2];if not cR[ou]then cR[ou]={Zv[ou]};end;(PC)[0X1]=cR[ou];(PC)[2]=0x1;end;end;end;end;end;until true;do return false,N1[7],DK;end;end;else do if not(p1>=18)then GK[N1[0X7]]=GK[N1[0x6]]~=N1[5];else if p1~=19 then local TE=(N1[0X7]);local OE=(C(function(...)(u)();do for k1 in...do(u)(true,k1);end;end;end));OE(GK[TE],GK[TE+1],GK[TE+0X0002]);DK=TE;GK[TE]=OE;UK=N1[0X6];else local Du=(N1[0x7]);local lu=C(function(...)(u)();for SC,FC,yC,pC,fC,UC,jC,WC,LC,TC in...do(u)(true,{SC,FC,yC,pC,fC,UC,jC,WC,LC,TC});end;end);(lu)(GK[Du],GK[Du+1],GK[Du+0X2]);DK=Du;GK[Du]=lu;UK=N1[0X00006];end;end;end;end;end;else if not(p1>=0X0022)then do if not(p1<28)then if p1<31 then if p1>=0X1D then do if p1==0X01e then(GK)[N1[0X00007]]=Q(GK[N1[0x06]]);else(GK)[N1[0X7]]=GK[N1[0X6]]+GK[N1[0X1]];end;end;else do repeat local mG,lG=Cp,GK;if not(#mG>0X0)then else local Ej=({});do for eb,Xb in t,mG do for Xy,Vy in t,Xb do if Vy[0X1]==lG and Vy[2]>=0 then local bt=Vy[2];if not Ej[bt]then(Ej)[bt]={lG[bt]};end;do Vy[1]=Ej[bt];end;Vy[0X2]=1;end;end;end;end;end;until true;end;local jW=(N1[7]);return false,jW,jW+N1[6]-0X2;end;else if p1>=32 then if p1==33 then(GK)[N1[7]]={c({},1,N1[6])};else(GK)[N1[7]]=GK[N1[6]]+N1[0X5];end;else UK=N1[0x6];end;end;else if p1<0x19 then if p1~=24 then do if not(not(GK[N1[0X00006]]<=N1[0X5]))then else UK=N1[0X7];end;end;else GK[N1[7]]=GK[N1[6]]>GK[N1[0X1]];end;else do if not(p1<0X1A)then do if p1==27 then(GK)[N1[7]]=E(GK[N1[6]],GK[N1[0X1]]);else GK[N1[7]][GK[N1[0X0006]]]=GK[N1[0X01]];end;end;else local Z6=(N1[6]);(GK)[N1[7]]=GK[Z6]..GK[Z6+1];end;end;end;end;end;elseif p1<0X28 then if p1<37 then if not(p1>=35)then GK[N1[0x7]]=GK[N1[6]]%N1[5];else if p1==36 then(GK[N1[7]])[GK[N1[6]]]=N1[0X5];else(GK)[N1[7]]=GK[N1[6]]>=GK[N1[1]];end;end;else if p1>=38 then do if p1~=0x027 then GK[N1[0X0007]]=A(GK[N1[6]],GK[N1[1]]);else GK[N1[0X00007]]=N1[0X2];end;end;else(GK)[N1[0X7]]=GK[N1[0x06]]*GK[N1[1]];end;end;else if p1>=43 then do if p1<0X0002C then GK[N1[0x7]]=GK[N1[6]]%GK[N1[0x01]];else if p1==45 then GK[N1[0x00007]]=GK[N1[0X06]][N1[5]];else(GK)[N1[0X7]]=GK[N1[6]]^GK[N1[0X1]];end;end;end;else if not(p1>=41)then local yl=(N1[0X7]);GK[yl]=GK[yl](GK[yl+0X001]);do DK=yl;end;else if p1~=42 then do(GK)[N1[7]]=-GK[N1[6]];end;else do GK[N1[0X7]]=GK[N1[6]]~=GK[N1[0x1]];end;end;end;end;end;end;else if p1<69 then do if p1>=0x39 then if p1<63 then do if p1<0X3c then if p1<0X3A then local SB=N1[7];GK[SB](GK[SB+0X001]);DK=SB-1;else if p1==0X3B then kZ[N1[6]]=GK[N1[0x7]];else(GK)[N1[7]]=N(GK[N1[0X06]],GK[N1[0x01]]);end;end;else if not(p1>=61)then(GK)[N1[0X7]]={};else if p1==0X3e then(GK)[N1[7]]=GK[N1[0x06]]-GK[N1[0x001]];else(GK[N1[0X7]])[N1[0X2]]=GK[N1[0X0001]];end;end;end;end;elseif p1<66 then if p1<64 then local st=N1[7];DK=st+N1[6]-0X1;(GK[st])(c(GK,st+0X00001,DK));DK=st-0x1;else if p1~=65 then local Cg=(N1[0x7]);local Gg,kg=GK[Cg]();if Gg then GK[Cg+0X1]=kg;UK=N1[0X6];end;else if N1[1]==0XB9 then UK=UK-0X001;Kp[UK]={[6]=(N1[6]-0X62),[0X0007]=(N1[7]-98),[4]=0x00036};elseif N1[0X01]~=0Xe4 then local zQ=N1[7];for O_=zQ,zQ+(N1[6]-1)do(GK)[O_]=QK[Ip+(O_-zQ)+0x1];end;else UK=UK-1;(Kp)[UK]={[0X6]=(N1[6]-12),[7]=(N1[7]-0X0C),[4]=41};end;end;end;else if not(p1<0X043)then if p1==68 then GK[N1[0x7]]=N1[0X0002];else local l5=(N1[0X0007]);local H5=((N1[0X1]-1)*0X000032);local w5=(GK[l5]);for Lz=1,N1[0X6]do(w5)[H5+Lz]=GK[l5+Lz];end;end;else local uE=N1[7];GK[uE]=GK[uE](c(GK,uE+0x01,DK));DK=uE;end;end;else do if p1>=51 then if p1>=54 then if p1>=55 then if p1==56 then do GK[N1[7]]=R(GK[N1[0X6]],GK[N1[1]]);end;else local LW=(N1[0x07]);(GK[LW])(GK[LW+0x001],GK[LW+2]);do DK=LW-1;end;end;else GK[N1[7]]=#GK[N1[0X6]];end;else if not(p1<52)then if p1~=0X035 then(GK)[N1[0X07]]=false;else(GK)[N1[0X7]]=kZ[N1[0X06]];end;else(GK)[N1[0X7]]=GK[N1[0X006]]/GK[N1[1]];end;end;elseif p1>=0x000030 then if p1<0X31 then local Rw=Gp[N1[0x6]];(GK)[N1[7]]=Rw[0X0001][Rw[0X002]];else if p1==0x32 then do if N1[0X1]==127 then UK=UK-0X1;(Kp)[UK]={[0X6]=(N1[6]-138),[7]=(N1[7]-138),[0x004]=20};elseif N1[1]==0Xc6 then UK=UK-1;Kp[UK]={[0X006]=(N1[0X6]-142),[7]=(N1[0X07]-142),[4]=0x000014};else GK[N1[7]]=not GK[N1[0X00006]];end;end;else local Yp=N1[7];local Np=(N1[0X1]-1)*50;local Vp=(GK[Yp]);for cs=0x1,DK-Yp do(Vp)[Np+cs]=GK[Yp+cs];end;end;end;else do if p1==0X2f then do if GK[N1[0X6]]<=GK[N1[0x1]]then UK=N1[7];end;end;else do repeat local aM,DM=Cp,(GK);do if#aM>0 then local uJ={};for Sk,mk in t,aM do for aU,jU in t,mk do do if not(jU[0x1]==DM and jU[2]>=0X00)then else local oN=(jU[0X2]);if not uJ[oN]then(uJ)[oN]={DM[oN]};end;(jU)[0x01]=uJ[oN];jU[0x2]=0X1;end;end;end;end;end;end;until true;end;return true,N1[7],0X0;end;end;end;end;end;end;else if not(p1<0X51)then if not(p1>=0X57)then if p1>=84 then do if not(p1>=85)then local vF=(N1[0X07]);local FF=N1[0X6];do DK=vF+FF-1;end;repeat local hY,iY=Cp,(GK);do if not(#hY>0)then else local a2={};for Xl,Ul in t,hY do for hd,Td in t,Ul do if not(Td[1]==iY and Td[2]>=0X00000)then else local QY=(Td[2]);do if not a2[QY]then do(a2)[QY]={iY[QY]};end;end;end;Td[0X00001]=a2[QY];(Td)[2]=0X1;end;end;end;end;end;until true;return true,vF,FF;else do if p1==86 then(GK)[N1[0x00007]]=GK[N1[6]]<=GK[N1[0X1]];else for mA=N1[0X00007],N1[0X6]do do(GK)[mA]=nil;end;end;end;end;end;end;else if p1>=82 then if p1==0X053 then(GK[N1[0X7]])[N1[0x2]]=N1[0X005];else local sX=(N1[7]);DK=sX+N1[6]-1;(GK)[sX]=GK[sX](c(GK,sX+1,DK));DK=sX;end;else local kD=gp[N1[0x00006]];local cD=(nil);local PD=kD[0x00008];local SD=(#PD);if SD>0X0 then do cD={};end;do for KJ=0X1,SD do local mJ=PD[KJ];if mJ[0x1]~=0X00000 then(cD)[KJ-0X001]=Gp[mJ[0X02]];else cD[KJ-1]={GK,mJ[0X002]};end;end;end;q(Cp,cD);end;GK[N1[7]]=sZ(kD,cD,sK);end;end;else do if not(p1>=90)then if not(p1<88)then if p1==89 then GK[N1[0X7]]=true;else local nO=N1[0X7];local xO=C(function(...)(u)();for b7,Y7 in...do u(true,b7,Y7);end;end);xO(GK[nO],GK[nO+0X00001],GK[nO+2]);DK=nO;(GK)[nO]=xO;UK=N1[0X0006];end;else(GK)[N1[7]]=GK[N1[0x6]][GK[N1[0x001]]];end;else if not(p1<91)then if p1~=0X05c then DK=N1[0X007];GK[DK]();DK=DK-0X0001;else local As=N1[0X0007];local Ts,Vs=GK[As]();do if Ts then UK=N1[6];(GK)[As+3]=Vs;end;end;end;elseif not(GK[N1[7]])then else do UK=N1[6];end;end;end;end;end;else if p1>=0X00004b then if p1>=78 then if p1>=0X4f then if p1==80 then do if GK[N1[6]]==N1[0X5]then else do UK=N1[0X007];end;end;end;else(sK)[N1[2]]=GK[N1[7]];end;else do if GK[N1[0X6]]==GK[N1[0X1]]then else UK=N1[7];end;end;end;else if not(p1<0X4c)then if p1~=0X4d then local EP=FK-Ip;local LP=(N1[7]);if EP<0X0 then EP=-0X001;end;for RA=LP,LP+EP do GK[RA]=QK[Ip+(RA-LP)+1];end;DK=LP+EP;else GK[N1[7]]=GK[N1[6]];end;else GK[N1[0X07]]=GK[N1[6]]==GK[N1[0X1]];end;end;else do if not(p1>=0X48)then do if not(p1<0X0046)then if p1==0X047 then local Tn=(N1[0x0007]);local Fn,an=GK[Tn]();if not(Fn)then else do for Aa=0X1,N1[1]do GK[Tn+Aa]=an[Aa];end;end;UK=N1[0x00006];end;else if N1[1]==97 then UK=UK-1;do(Kp)[UK]={[6]=(N1[0X0006]-200),[0X4]=3,[7]=(N1[0X07]-0xc8)};end;elseif N1[1]==0Xe7 then UK=UK-1;Kp[UK]={[7]=(N1[0X007]-149),[0X004]=0X4c,[0X6]=(N1[0X6]-0X95)};else GK[N1[0x7]]=QK[Ip+1];end;end;else local qu=N1[0X00007];(GK)[qu]=GK[qu](GK[qu+1],GK[qu+0x2]);DK=qu;end;end;else if p1<0X49 then(GK)[N1[0X007]]=nil;else if p1==74 then do repeat local M1,k1=Cp,(GK);do if not(#M1>0X0)then else local De=({});do for nH,DH in t,M1 do for Za,Ga in t,DH do if not(Ga[0x1]==k1 and Ga[0X00002]>=0)then else local UV=(Ga[2]);if not De[UV]then(De)[UV]={k1[UV]};end;(Ga)[1]=De[UV];Ga[0X2]=0X00001;end;end;end;end;end;end;until true;end;return true,N1[0X7],0X1;else local JS=Gp[N1[0X6]];JS[1][JS[0X2]]=GK[N1[7]];end;end;end;end;end;end;end;end;until false;end);if oK then if JK then if KK~=1 then return GK[wK](c(GK,wK+0X1,DK));else do return GK[wK]();end;end;elseif wK then return c(GK,wK,KK);end;elseif H(JK)=="string"then if not(D(JK,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(D(JK,"\094\046\045\058%d+\058 "))then(k)(JK,0X0);else(k)("Lu\114\097\112\104 \083\099ript\058"..(Hp[UK-1]or'(\105\110\116\101rnal\041')..': '..d(JK),0);end;else(k)(JK,0X00);end;end;do if P then(P)(jp,Qp);end;end;return jp;end;else if NF~=1 then SZ=TZ();else function TZ()local l7,F7,G7,u7,V7={},{nil,nil,nil,{},nil,nil,{},nil,{}},0X1,nil,nil;while G7<=2 do if G7<=0 then V7=x();G7=0X0003;elseif G7~=0X00001 then(F7)[16]=I();G7=0X0;else u7=1;do G7=0x02;end;end;end;local C7=nil;for cb=0,2 do if not(cb<=0)then if cb==1 then(F7)[rZ]=I();else C7=F7[4];end;else for n4=0X1,V7 do local O4=x();local v4=x();local r4=(nil);local T4=0;while T4<2 do if T4==0X00 then r4=x();T4=1;else for N2=O4,v4 do F7[0X9][N2]=r4;end;T4=2;end;end;end;end;end;local H7=({});local A7=x()-0X5Dfa;local M7,z7,B7,J7,c7=nil,nil,nil,nil,(nil);for Z6=0X00,0X000B do if not(Z6<=0X5)then if not(Z6<=8)then do if not(Z6<=9)then if Z6==0xa then do J7=I();end;else c7=I()~=0x0;end;else B7=x()-57034;end;end;else do if not(Z6<=0x06)then if Z6==7 then(F7)[17]=x();else F7[2]=e();end;else z7={};end;end;end;else if not(Z6<=2)then if not(Z6<=3)then do if Z6==4 then(F7)[0X6]=f(M7,1,0x1)~=0x0;else(F7)[0X1]=f(M7,VZ,0X00001)~=0x0;end;end;else M7=I();end;else do if Z6<=0X0 then for qV=1,A7 do(C7)[qV]={[0x07]=r(),[0x6]=r(),[5]=I(),[4]=e(),[PZ]=I(),[1]=r(),[2]=I()};end;else if Z6~=1 then do(F7)[IZ]=I();end;else(F7)[0x11]=I();end;end;end;end;end;end;for gb=1,B7 do local Kb,Cb=nil,0;local Zb=nil;do repeat if Cb==0X0 then Zb=I();Cb=0X01;else(l7)[gb-0X00001]=u7;Cb=2;end;until Cb>=0X2;end;if Zb==208 then do Kb=M();end;elseif Zb==110 then Kb=p();elseif Zb==243 then do Kb=s(yZ(J7),x());end;elseif Zb==102 then Kb=s(yZ(J7),I());elseif Zb==139 then Kb=false;elseif Zb==0X00001 then Kb=s(yZ(J7),0X0005);elseif Zb==0Xf5 then Kb=s(yZ(J7),5);elseif Zb==220 then Kb=true;elseif Zb==0x0055 then do Kb=p();end;elseif Zb==21 then do Kb=M();end;else if Zb==lZ then Kb=s(yZ(J7),x());end;end;local mb={Kb,{}};z7[u7]=mb;Cb=0X01;while 0.48484622637018027 do if Cb~=0 then u7=u7+1;Cb=0;else if c7 then local KO=0;while KO~=2 do do if KO==0X000 then HZ[dZ]=mb;KO=1;else dZ=dZ+1;KO=2;end;end;end;end;break;end;end;end;(F7)[0X11]=I();F7[0X0000a]=x();do G7=0X00007;end;local W7=nil;do while G7~=0X00008 do if G7<=3 then if not(G7<=1)then if G7~=2 then F7[11]=I();do G7=0x1;end;else for m7=pZ,e()do H7[m7]={I(),e()};end;G7=0X03;end;elseif G7==0X0000 then for AO=0X01,A7 do local QO=nil;for r0=0,0X0001 do if r0==0 then QO=F7[4][AO];else for Nd,Od in ipairs(L)do local zd,Zd=nil,nil;for A3=0,2 do if A3<=0 then do zd=b[Od];end;else if A3==1 then Zd=QO[zd];else do if Zd==10 then local m4,Y4,G4=0X0001,nil,nil;repeat if m4==0x00 then do G4=z7[Y4];end;break;else Y4=l7[QO[Od]];m4=0X0;end;until(false);if G4 then(QO)[zd]=G4[1];local KQ=(G4[0X02]);KQ[#KQ+1]={QO,zd};end;elseif Zd==1 then do QO[Od]=AO+QO[Od]+0X01;end;end;end;end;end;end;end;end;end;end;G7=5;else do(F7)[0X12]=I();end;do G7=6;end;end;else if G7<=5 then if G7~=4 then do(F7)[3]=e();end;do G7=4;end;else F7[0x8]=H7;G7=0x00002;end;else do if G7==0X6 then W7=F7[7];G7=0X8;else F7[0X5]=e();G7=0x0;end;end;end;end;end;end;local R7=(x()-71063);do for sx=0,R7-pZ do W7[sx]=TZ();end;end;do return F7;end;end;end;end;end;do Jv=0X000;end;while 410567394 do if Jv<=0X0 then kZ[1]=HZ;Jv=0X2;elseif Jv==0x1 then return sZ(SZ,MZ,U)(...);else do HZ=nil;end;Jv=1;end;end;end)(table.unpack,pcall,'l\115hif\116',unpack,3,rawset,_ENV,7,"..",0X14,"\098\110ot",72,"\098\097n\100",0x00,0x2,13,0X5,string.gsub,table.insert,11,error,'\098\111r',9,getfenv,10,'\098x\111r',string.char,nil,setmetatable,0X00C,0x8,string.rep,string.substring,setfenv,63,...);
